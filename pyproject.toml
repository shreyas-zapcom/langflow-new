[tool.poetry]
name = "langflow-base"
version = "0.0.88"
description = "A Python package with a built-in web application"
authors = ["Langflow <contact@langflow.org>"]
maintainers = [
    "Carlos Coelho <carlos@langflow.org>",
    "Cristhian Zanforlin <cristhian.lousa@gmail.com>",
    "Gabriel Almeida <gabriel@langflow.org>",
    "Igor Carvalho <igorr.ackerman@gmail.com>",
    "Lucas Eduoli <lucaseduoli@gmail.com>",
    "Ot√°vio Anovazzi <otavio2204@gmail.com>",
    "Rodrigo Nader <rodrigo@langflow.org>",
    "Italo dos Anjos <italojohnnydosanjos@gmail.com>"
]
repository = "https://github.com/shreyas-zapcom/langflow-new"
license = "MIT"
readme = "README.md"
keywords = ["nlp", "langchain", "openai", "gpt", "gui"]

# Adjusting packages to ensure `langflow` is included
packages = [
    { include = "langflow", from = ".venv/Lib/site-packages" }
]

# Make sure the include directive accurately points to the `langflow` directory
include = ["pyproject.toml", "README.md", "langflow/**/*"]

documentation = "https://docs.langflow.org"

[tool.poetry.scripts]
langflow-base = "langflow.__main__:main"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
fastapi = { git = "https://github.com/encode/fastapi.git", rev = "0.111.0" }
httpx = { git = "https://github.com/encode/httpx.git", rev = "master" }
uvicorn = { git = "https://github.com/encode/uvicorn.git", rev = "0.30.0" }
gunicorn = { git = "https://github.com/benoitc/gunicorn.git", rev = "22.0.0" }
langchain = { git = "https://github.com/shreyas-zapcom/langflow-new.git", rev = "0.2.0" }
langchainhub = { git = "https://github.com/shreyas-zapcom/langflow-new.git", rev = "0.1.15" }
sqlmodel = { git = "https://github.com/tiangolo/sqlmodel.git", rev = "0.0.18" }
loguru = { git = "https://github.com/Delgan/loguru.git", rev = "0.7.1" }
rich = { git = "https://github.com/Textualize/rich.git", rev = "13.7.0" }
langchain-experimental = { git = "https://github.com/shreyas-zapcom/langflow-new.git", rev = "0.0.61" }
pydantic = { git = "https://github.com/pydantic/pydantic.git", rev = "2.7.0" }
pydantic-settings = { git = "https://github.com/pydantic/pydantic-settings.git", rev = "2.2.0" }
websockets = { git = "https://github.com/aaugustin/websockets.git", rev = "master" }
typer = { git = "https://github.com/tiangolo/typer.git", rev = "0.12.0" }
cachetools = { git = "https://github.com/google/cachetools.git", rev = "5.3.1" }
platformdirs = { git = "https://github.com/platformdirs/platformdirs.git", rev = "4.2.0" }
python-multipart = { git = "https://github.com/mikemaccana/python-multipart.git", rev = "0.0.7" }
orjson = { git = "https://github.com/ijl/orjson.git", rev = "3.10.0" }
alembic = { git = "https://github.com/sqlalchemy/alembic.git", rev = "1.13.0" }
passlib = { git = "https://github.com/passlib/passlib.git", rev = "1.7.4" }
bcrypt = { git = "https://github.com/pyca/bcrypt.git", rev = "4.0.1" }
pillow = { git = "https://github.com/python-pillow/Pillow.git", rev = "10.2.0" }
docstring-parser = { git = "https://github.com/rr-/docstring-parser.git", rev = "0.16" }
python-jose = { git = "https://github.com/mpdavis/python-jose.git", rev = "3.3.0" }
pandas = { git = "https://github.com/pandas-dev/pandas.git", rev = "2.2.2" }
multiprocess = { git = "https://github.com/uqfoundation/multiprocess.git", rev = "0.70.14" }
duckdb = { git = "https://github.com/duckdb/duckdb.git", rev = "1.0.0" }
python-docx = { git = "https://github.com/python-openxml/python-docx.git", rev = "1.1.0" }
jq = { git = "https://github.com/python-jq/python-jq.git", rev = "1.7.0", markers = "sys_platform != 'win32'" }
pypdf = { git = "https://github.com/py-pdf/pypdf.git", rev = "4.2.0" }
nest-asyncio = { git = "https://github.com/erdewit/nest_asyncio.git", rev = "1.6.0" }
emoji = { git = "https://github.com/carpedm20/emoji.git", rev = "2.12.0" }
cryptography = { git = "https://github.com/pyca/cryptography.git", rev = "42.0.5" }
asyncer = { git = "https://github.com/davidtheclark/asyncer.git", rev = "0.0.5" }
pyperclip = { git = "https://github.com/asweigart/pyperclip.git", rev = "1.8.2" }
uncurl = { git = "https://github.com/tonybaloney/uncurl.git", rev = "0.0.11" }
sentry-sdk = { git = "https://github.com/getsentry/sentry-python.git", extras = ["fastapi", "loguru"], rev = "2.5.1" }
chardet = { git = "https://github.com/chardet/chardet.git", rev = "5.2.0" }
firecrawl-py = { git = "https://github.com/firecrawl/firecrawl-py.git", rev = "0.0.16" }
opentelemetry-api = { git = "https://github.com/open-telemetry/opentelemetry-python.git", rev = "1.25.0" }
opentelemetry-sdk = { git = "https://github.com/open-telemetry/opentelemetry-python.git", rev = "1.25.0" }
opentelemetry-exporter-prometheus = { git = "https://github.com/open-telemetry/opentelemetry-python-contrib.git", rev = "0.46b0" }
opentelemetry-instrumentation-fastapi = { git = "https://github.com/open-telemetry/opentelemetry-python-contrib.git", rev = "0.46b0" }
prometheus-client = { git = "https://github.com/prometheus/client_python.git", rev = "0.20.0" }
aiofiles = { git = "https://github.com/aio-libs/aiofiles.git", rev = "24.1.0" }
setuptools = { git = "https://github.com/pypa/setuptools.git", rev = "70" }
nanoid = { git = "https://github.com/ai/nanoid.git", rev = "2.0.0" }
filelock = { git = "https://github.com/tox-dev/py-filelock.git", rev = "3.15.4" }

[tool.poetry.extras]
deploy = ["celery", "redis", "flower"]
local = ["llama-cpp-python", "sentence-transformers", "ctransformers"]
all = ["deploy", "local"]

[tool.poetry.group.dev.dependencies]
pytest-split = "^0.9.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests", "integration"]
console_output_style = "progress"
filterwarnings = ["ignore::DeprecationWarning"]
log_cli = true
markers = ["async_test"]

[tool.mypy]
namespace_packages = true
mypy_path = "langflow"
ignore_missing_imports = true
disable_error_code = ["type-var"]

[tool.ruff]
exclude = [".venv/Lib/site-packages/langflow/alembic/*"]
line-length = 120

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
